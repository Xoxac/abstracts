a = None # пустая строка
b = a or 1
print(b) # работает!! оператор or искал первый истинный элемент и нашел его — 1.

# and: если все операнды являются истинными (ненулевые или непустые),
# то возвращается последнее истинное значение.

print( 1 and "hello" and [False]) # [False]
# Несмотря на то, что последний операнд похож на False, он является непустым списком, а значит он истинный.

# and: если один из операндов является ложным, то возвращается первый такой операнд.
print(42 and 0 and '' and False) # 0
# Первый операнд является ненулевым числом — значит истинный, а все остальные — ноль,
# пустая строка, булево значение False — ложные.
# И согласно правилу возвращается первый ложный операнд (слева направо).

# or: если один из операндов является истинным, то возвращается первый такой операнд,
# а остальные игнорируются.
print([] or 3.14 or False) # 3.14
# Первый операнд (пустой список) является ложным, следующий  (ненулевое число) — истинным,
# а значит, возвращается именно он, а все остальные игнорируются (не вычисляются).

# or: если все операнды являются ложными, то возвращается последний.
print(0 or '' or False) # False
# Поиск истинного операнда идет также слева направо, но раз ни один такой не нашелся,
# возвращается последнее значение, даже если оно ложное.

# написать программу, которая анализирует две переменные и выводит их значения
# только если они не нулевые.
# Первым этапом проверим, являются ли обе переменные истинными.
if a and b : # проверка истинности обеих переменных
    print("Обе переменные истинные")
    print(a,b)
elif a or b:
    print("Одна из переменных истинная")
    print(a or b) # печать значения одной переменной, которая является истинной
else:
    print("Обе ложные")

c = int(input("digit:  "))

if 100 <= c <= 999:
    if c % 2 == 0:
        if c % 3 == 0:
            print("Число удовлетворяет условиям")

if 100 <= c <= 999 and c % 2 == 0 and c % 3 == 0:
    print("Число удовлетворяет условиям")

# В Python есть функция all([ ]), которая возвращает True, если все условия,
# переданные в аргумент функции в виде списка, являются истинными.
if all([type(c) == int,
        100 <= c <= 999,
        c % 2 == 0,
        c % 3 == 0]):
    print("Число удовлетворяет условиям")
# Функция all([ ]) возвращает True, если все элементы списка являются истинными.
# Если нужно, чтобы был хотя бы один истинный, на помощь приходит функция any([ ]).
# Ее синтаксис аналогичен рассмотренному выше примеру c функцией all([ ]).

