# Существует два типа пути: абсолютный и относительный

# Абсолютный путь начинается с корневого каталога. Для Windows это диск С:, D: и т. д., для Unix это “/” (слеш).
# Абсолютный путь всегда уникальный.

# Относительный путь начинается с текущего рабочего каталога.

# Чтобы поработать с путями есть модуль os.
# Функция os.chdir() позволяет нам изменить директорию, которую мы в данный момент используем.
# Если вам нужно знать, какой путь вы в данный момент используете, для этого нужно вызвать os.getcwd()

import os

print(os.getcwd())

os.chdir("..")  # подняться на один уровень выше
print(os.getcwd())

print(os.listdir()) # получить весь список файлов, находящихся в директории

# Чтобы склеивать пути с учётом особенностей ОС, следует использовать функцию os.path.join().
# Это связано с тем, что в разных операционных системах могут быть разные разделители каталогов

# чтобы начать работать с файлом, надо его открыть с помощью команды специальной функции open.
# f = open('path/to/file',    # путь к файлу может быть относительным или абсолютным
#          'filemode',        # режим открытия файла
#          encoding='utf8')   # указание, в какой кодировке файл записан

# Режимы открытия файла:
# 'r' - открыть файл для чтения
# 'w' - открыть файл для записи
# 'x' - открыть файл для записи, если файл не существует (если уже есть — исключение)
# 'a' - открыть файл для добавления (указатель будет поставлен в конец)
# 'b' - открыть файл в бинарном режиме
# 't' - открыть файл в текстовом режиме
# '+' - открыть файл для чтения и записи

# При открытии файла внутри него ставится указатель текущей позиции для чтения. При открытии в режиме чтения или записи
# указатель ставится на начало, в режиме a (добавление новых записей в конец файла) — в конец.

# после открытия файл нужно закрыть
# f.close()

# f.read(n) — операция, читающая с текущего места n символов, если файл открыт в t режиме, или n байт,
# если файл открыт в b режиме, и возвращающая прочитанную информацию.

# f.readline() — операция, читающая одну строку из файла и возвращающая её.
# f.readlines() — операция, читающая все строки из файла и возвращающая их в виде списка.
# f.write(s) — операция, записывающая строку s в файл.
# f.writelines(lines) — операция, записывающая список строк lines в файл.
# f.seek(offset, whence) — операция, перемещающая указатель текущей позиции в файле.
# f.tell() — операция, возвращающая текущую позицию указателя в файле.
# f.flush() — операция, принудительно записывающая буфер на диск.
# f.truncate(size) — операция, обрезающая файл до размера size.
# f.closed — атрибут, указывающий, закрыт ли файл.
"__________________________________________________________"

# Объект файл является итератором, поэтому его можно использовать в цикле for.
# В этом случае каждая итерация цикла вернёт строку файла.
# f = open('test.txt')  # можно перечислять строки в файле
# for line in f:
#     print(line, end='')

# Для явного указания места работы с файлом, а также чтобы не забывать закрывать файл после обработки,
# существует менеджер контекста with.
with open('c:\\noscan\\file.txt') as f:
    for line in f:
        print(line, end='')

with open('c:\\noscan\\file.txt', 'r') as input_file:
   with open('output.txt', 'w') as output_file:
       for line in input_file:
           output_file.write(line)

f = open('output.txt', 'r', encoding='utf8')
print(f.read())
f.close()

with open('input.txt', 'r') as input_file:
   with open('output.txt', 'w') as output_file:
       for line in reversed(input_file.readlines()):
           output_file.write(line)



from tkinter import Tk, Entry, Label, Button

f = open("file.txt", 'r+')


def get():
    a = f.readline()
    f.seek(0)
    label.config(text=a)


def change():
    a = entry.get()
    f.truncate(0)
    f.write(a)
    f.seek(0)


window = Tk()
window.title("Гриб")
window.geometry("250x250")
entry = Entry(window, width=10, borderwidth=5)
entry.pack(expand=0)
label = Label(window, font="Arial 15", text="")
label.pack(side="bottom", expand=0)
button1 = Button(window, text="Получить", font="Arial 10", borderwidth=5, command=get)
button1.pack(side="right", expand=0)
button2 = Button(window, text="Записать", font="Arial 10", borderwidth=5, command=change)
button2.pack(side="left", expand=0)
# i = input('ins: ')
# if i == 'stop':
#     pass
# elif i == 'get':
#     print(f.readline())
# else:
#     f.truncate(0)
#     f.write(i)
#     f.seek(0)

window.mainloop()
f.close()